apiVersion: v1
kind: ConfigMap
metadata:
  name: minimal-registry-data
  namespace: toolhive-system
data:
  registry.json: |
    {
      "$schema": "https://raw.githubusercontent.com/stacklok/toolhive/main/pkg/registry/data/schema.json",
      "version": "1.0.0",
      "last_updated": "2025-09-08T12:00:00Z",
      "servers": {
        "filesystem": {
          "description": "Allows you to do filesystem operations. Mount paths under /projects using --volume.",
          "tier": "Community",
          "status": "Active",
          "transport": "stdio",
          "tools": [
            "read_file",
            "write_file",
            "list_directory",
            "create_directory"
          ],
          "metadata": {
            "stars": 1500,
            "pulls": 500,
            "last_updated": "2025-09-08T12:00:00Z"
          },
          "repository_url": "https://github.com/modelcontextprotocol/servers",
          "tags": [
            "filesystem",
            "files",
            "storage",
            "production"
          ],
          "image": "docker.io/mcp/filesystem:latest",
          "permissions": {
            "network": {
              "outbound": {}
            }
          },
          "args": [
            "/projects"
          ]
        },
        "github": {
          "description": "Provides integration with GitHub's APIs",
          "tier": "Official",
          "status": "Active",
          "transport": "stdio",
          "tools": [
            "create_issue",
            "create_pull_request",
            "search_repositories"
          ],
          "metadata": {
            "stars": 2200,
            "pulls": 800,
            "last_updated": "2025-09-08T12:00:00Z"
          },
          "repository_url": "https://github.com/github/github-mcp-server",
          "tags": [
            "github",
            "api",
            "repository",
            "production"
          ],
          "image": "ghcr.io/github/github-mcp-server:latest",
          "permissions": {
            "network": {
              "outbound": {
                "allow_host": [
                  ".github.com",
                  ".githubusercontent.com"
                ],
                "allow_port": [
                  443
                ]
              }
            }
          }
        },
        "experimental-ai": {
          "description": "Experimental AI assistant with advanced features",
          "tier": "Community",
          "status": "Active",
          "transport": "stdio",
          "tools": [
            "analyze_code",
            "generate_docs",
            "suggest_improvements"
          ],
          "metadata": {
            "stars": 150,
            "pulls": 50,
            "last_updated": "2025-09-01T12:00:00Z"
          },
          "repository_url": "https://github.com/example/experimental-ai",
          "tags": [
            "ai",
            "experimental",
            "analysis"
          ],
          "image": "docker.io/mcp/experimental-ai:latest",
          "permissions": {
            "network": {
              "outbound": {}
            }
          }
        },
        "deprecated-tool": {
          "description": "Legacy tool server - use new alternatives",
          "tier": "Community",
          "status": "Active",
          "transport": "stdio",
          "tools": [
            "legacy_process"
          ],
          "metadata": {
            "stars": 10,
            "pulls": 5,
            "last_updated": "2024-01-01T12:00:00Z"
          },
          "repository_url": "https://github.com/example/deprecated-tool",
          "tags": [
            "legacy",
            "deprecated",
            "tools"
          ],
          "image": "docker.io/mcp/deprecated-tool:v1",
          "permissions": {
            "network": {
              "outbound": {}
            }
          }
        }
      }
    }
---
apiVersion: toolhive.stacklok.dev/v1alpha1
kind: MCPRegistry
metadata:
  name: minimal-registry
  namespace: toolhive-system
spec:
  displayName: "Production-Ready MCP Servers"
  source:
    type: configmap
    configmap:
      name: minimal-registry-data
  filter:
    tags:
      include:
        - "production"
      exclude:
        - "experimental"
        - "deprecated"