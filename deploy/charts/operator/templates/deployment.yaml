apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "operator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.operator.autoscaling.enabled }}
  replicas: {{ .Values.operator.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.operator.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "operator.labels" . | nindent 8 }}
        {{- with .Values.operator.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.operator.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: manager
          securityContext:
            {{- toYaml .Values.operator.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.operator.image }}"
          imagePullPolicy: {{ .Values.operator.imagePullPolicy }}
          args:
          - --leader-elect
          ports:
            {{- toYaml .Values.operator.ports | nindent 12 }}
          env:
          # Always use structured JSON logs in Kubernetes (not configurable)
          - name: UNSTRUCTURED_LOGS
            value: "false"
          - name: ENABLE_EXPERIMENTAL_FEATURES
            value: {{ .Values.operator.features.experimental | quote }}
          {{- if eq .Values.operator.rbac.scope "namespace" }}
          - name: WATCH_NAMESPACE
            value: "{{ .Values.operator.rbac.allowedNamespaces | join "," }}"
          {{- end }}
          - name: TOOLHIVE_RUNNER_IMAGE
            value: "{{ .Values.operator.toolhiveRunnerImage }}"
          - name: TOOLHIVE_PROXY_HOST
            value: "{{ .Values.operator.proxyHost }}"
          {{- if .Values.operator.env }}
            {{- toYaml .Values.operator.env | nindent 12 }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.operator.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.operator.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          {{- with .Values.operator.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.operator.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
