FROM maven:3.9-eclipse-temurin-21-alpine

{{if .CACertContent}}
# Add custom CA certificate BEFORE any network operations
# This ensures that package managers can verify TLS certificates in corporate networks
COPY ca-cert.crt /tmp/custom-ca.crt
RUN cat /tmp/custom-ca.crt >> /etc/ssl/certs/ca-certificates.crt && \
    rm /tmp/custom-ca.crt
{{end}}

# Install CA certificates
RUN apk add --no-cache ca-certificates

# Set working directory
WORKDIR /app

# Create a non-root user to run the application and set proper permissions
RUN addgroup -S appgroup && \
    adduser -S appuser -G appgroup && \
    mkdir -p /app && \
    chown -R appuser:appgroup /app && \
    mkdir -p /home/appuser/.m2 && \
    chown -R appuser:appgroup /home/appuser

{{if .CACertContent}}
# Properly install the custom CA certificate using standard tools
RUN mkdir -p /usr/local/share/ca-certificates && \
    cp /tmp/custom-ca.crt /usr/local/share/ca-certificates/custom-ca.crt 2>/dev/null || \
    echo "CA cert already added to bundle" && \
    chmod 644 /usr/local/share/ca-certificates/custom-ca.crt 2>/dev/null || true && \
    update-ca-certificates

# Configure Java to use the custom CA certificate
ENV JAVA_TOOL_OPTIONS="-Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
{{end}}

# Set environment variables for better performance in containers
ENV MAVEN_OPTS="-Xmx512m -XX:MaxMetaspaceSize=128m" \
    MAVEN_CONFIG="/home/appuser/.m2"

{{if .IsLocalPath}}
# Copy the local source code
COPY . /app/

# Change ownership of copied files to appuser
USER root
RUN chown -R appuser:appgroup /app
{{end}}

# Switch to non-root user
USER appuser

# Download the Maven artifact and its dependencies
# Also try to download the runner JAR (for Quarkus applications)
RUN mvn dependency:get -Dartifact={{.MCPPackage}}:jar -Dtransitive=true && \
    mvn dependency:get -Dartifact={{.MCPPackage}}:jar:runner 2>/dev/null || true

# Prepare JAR paths
RUN GROUP_ID=$(echo '{{.MCPPackage}}' | cut -d: -f1 | tr '.' '/') && \
    ARTIFACT_ID=$(echo '{{.MCPPackage}}' | cut -d: -f2) && \
    VERSION=$(echo '{{.MCPPackage}}' | cut -d: -f3) && \
    BASE_PATH="/home/appuser/.m2/repository/$GROUP_ID/$ARTIFACT_ID/$VERSION" && \
    RUNNER_JAR="$BASE_PATH/$ARTIFACT_ID-$VERSION-runner.jar" && \
    REGULAR_JAR="$BASE_PATH/$ARTIFACT_ID-$VERSION.jar" && \
    if [ -f "$RUNNER_JAR" ]; then \
        echo "$RUNNER_JAR" > /app/jar-path.txt; \
    else \
        echo "$REGULAR_JAR" > /app/jar-path.txt; \
    fi

# Run the MCP server
ENTRYPOINT ["sh", "-c", "java -jar $(cat /app/jar-path.txt) {{range .MCPArgs}}{{.}} {{end}}"]