# Helm values for kube-prometheus-stack to enable remote write receiver
# This configuration enables the --web.enable-remote-write-receiver flag
# which is required for the OTEL collector to send metrics to Prometheus

prometheus:
  prometheusSpec:
    # Enable remote write receiver API endpoint
    # This adds the --web.enable-remote-write-receiver flag to Prometheus
    additionalArgs:
      - name: "web.enable-remote-write-receiver"
    
    # Add scrape config for OTEL Collector metrics endpoint
    # additionalScrapeConfigs:
    #   - job_name: 'toolhive-otel-metrics'
    #     static_configs:
    #       - targets: ['otel-collector-opentelemetry-collector.monitoring:8889']
    #     scrape_interval: 15s
    #     metrics_path: /metrics
    
    # Optional: Configure retention and storage
    retention: "1d"
    retentionSize: "5GB"
    
    # Optional: Enable ServiceMonitor for Prometheus to scrape itself
    serviceMonitorSelectorNilUsesHelmValues: false

# Grafana configuration (optional)
grafana:
  enabled: true
  # The below is the default password for the grafana admin user.
  # This is set to "admin" for convenience and to make it easier to access the grafana dashboard
  # when running locally.
  # In production, you should _obviously_ not use this password :D.
  adminPassword: "admin"  # Change this in production
  
  # Pre-configure Prometheus as datasource
  sidecar:
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
  
  # Additional data sources configuration
  additionalDataSources:
    - name: Jaeger
      type: jaeger
      access: proxy
      url: http://jaeger-all-in-one-query.monitoring:16686
      isDefault: false
      version: 1
      editable: true

# AlertManager configuration (optional)
alertmanager:
  enabled: false

# Node Exporter configuration (optional)
nodeExporter:
  enabled: true

# Prometheus Operator configuration
prometheusOperator:
  enabled: true
  resources:
    requests:
      memory: "200Mi"
      cpu: "100m"
    limits:
      memory: "500Mi"
      cpu: "500m"

# Kube State Metrics configuration (optional)
kubeStateMetrics:
  enabled: true