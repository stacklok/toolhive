name: Publish Helm Charts
on:
  workflow_call:

jobs:
  release-helm-charts:
    name: Release Helm Charts
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      id-token: write

    outputs:
      released_charts: ${{ steps.prepare-matrix.outputs.published_charts_matrix }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          config: cr.yaml
          charts_dir: deploy/charts
          mark_as_latest: false
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - name: Publish and Sign OCI Charts
        run: |
          for chart in `find .cr-release-packages -name '*.tgz' -print`; do
            helm push ${chart} oci://ghcr.io/${GITHUB_REPOSITORY} |& tee helm-push-output.log
            file_name=${chart##*/}
            chart_name=${file_name%-*}
            digest=$(awk -F "[, ]+" '/Digest/{print $NF}' < helm-push-output.log)
            cosign sign -y "ghcr.io/${GITHUB_REPOSITORY}/${chart_name}@${digest}"
          done
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Prepare Matrix Output
        id: prepare-matrix
        run: |
          # Build JSON array from chart files
          json_array="["
          first=true
          for chart in `find .cr-release-packages -name '*.tgz' -print`; do
            file_name=${chart##*/}
            release_name=${file_name%.tgz}
            
            if [ "$first" = true ]; then
              first=false
            else
              json_array="${json_array},"
            fi
            json_array="${json_array}\"${release_name}\""
          done
          json_array="${json_array}]"
          echo "published_charts_matrix=${json_array}" >> $GITHUB_OUTPUT

  update-docs-website-charts:
    name: Trigger Docs Update for Charts
    needs: [ release-helm-charts ]
    permissions: {}
    uses: ./.github/workflows/update-docs-website.yml
    strategy:
      matrix:
        version: ${{ fromJSON(needs.release-helm-charts.outputs.released_charts) }}
    with:
      version: ${{ matrix.version }}
    secrets:
      DOCS_REPO_DISPATCH_TOKEN: ${{ secrets.DOCS_REPO_DISPATCH_TOKEN }}
