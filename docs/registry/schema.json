{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/stacklok/toolhive/main/docs/registry/schema.json",
  "title": "ToolHive MCP Server Registry Schema",
  "description": "JSON Schema for the ToolHive MCP server registry. This schema validates the structure and content of registry.json entries for MCP servers. See docs/registry/management.md and docs/registry/heuristics.md for inclusion criteria and management processes.",
  "type": "object",
  "required": ["last_updated", "servers", "version"],
  "properties": {
    "last_updated": {
      "type": "string",
      "description": "Timestamp when the registry was last updated, in RFC3339 format",
      "format": "date-time"
    },
    "servers": {
      "type": "object",
      "description": "Collection of MCP server entries indexed by server name",
      "patternProperties": {
        "^[a-z0-9][a-z0-9-]+[a-z0-9]$": {
          "$ref": "#/definitions/server"
        }
      },
      "additionalProperties": false
    },
    "version": {
      "type": "string",
      "description": "Registry schema version",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    }
  },
  "definitions": {
    "server": {
      "type": "object",
      "description": "MCP server entry definition",
      "required": [
        "description",
        "image",
        "status",
        "tier",
        "tools",
        "transport"
      ],
      "properties": {
        "args": {
          "type": "array",
          "description": "Default command-line arguments passed to the MCP server container",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "custom_metadata": {
          "type": "object",
          "description": "Custom user-defined metadata for the MCP server, primarily for custom registries",
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the server's purpose and functionality",
          "minLength": 10,
          "maxLength": 500
        },
        "docker_tags": {
          "type": "array",
          "description": "Available Docker tags for this server image",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "env_vars": {
          "type": "array",
          "description": "Environment variables that can be passed to the server",
          "items": {
            "$ref": "#/definitions/environment_variable"
          }
        },
        "image": {
          "type": "string",
          "description": "Container image reference for the MCP server",
          "pattern": "^[a-z0-9]([a-z0-9._-]*[a-z0-9])?(:[0-9]+)?(/[a-z0-9]([a-z0-9._-]*[a-z0-9])?)*(:([a-zA-Z0-9][a-zA-Z0-9._-]*))?$",
          "examples": [
            "mcp/fetch:latest",
            "ghcr.io/github/github-mcp-server:latest",
            "mcr.microsoft.com/playwright/mcp",
            "example.com:5000/team/my-app:2.0"
          ]
        },
        "metadata": {
          "description": "Additional information about the server such as popularity metrics",
          "$ref": "#/definitions/metadata"
        },
        "name": {
          "type": "string",
          "description": "Identifier for the MCP server, used when referencing the server in commands (auto-generated from the object key)"
        },
        "permissions": {
          "description": "Security profile and access permissions for the server",
          "$ref": "#/definitions/permissions"
        },
        "provenance": {
          "description": "Verification and signing metadata",
          "$ref": "#/definitions/provenance"
        },
        "repository_url": {
          "type": "string",
          "description": "URL of the source code repository for the server",
          "format": "uri"
        },
        "status": {
          "type": "string",
          "description": "Current status of the server (Active or Deprecated)",
          "enum": ["Active", "Deprecated"]
        },
        "tags": {
          "type": "array",
          "description": "Categorization tags for search and filtering",
          "items": {
            "type": "string",
            "pattern": "^[a-z0-9][a-z0-9_-]+[a-z0-9]$"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "target_port": {
          "type": "integer",
          "description": "Port for the container to expose (applicable to SSE and Streamable HTTP transports)",
          "minimum": 1,
          "maximum": 65535
        },
        "tier": {
          "type": "string",
          "description": "Tier classification of the server, (Official or Community)",
          "enum": ["Official", "Community"]
        },
        "tools": {
          "type": "array",
          "description": "List of tool names provided by this MCP server",
          "items": {
            "type": "string",
            "pattern": "^[\\w-]+$"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "transport": {
          "type": "string",
          "description": "Communication transport protocol used by the MCP server",
          "enum": ["stdio", "sse", "streamable-http"],
          "default": "stdio"
        }
      },
      "additionalProperties": false
    },
    "environment_variable": {
      "type": "object",
      "description": "Environment variable definition for MCP server configuration",
      "required": ["name", "description", "required"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Environment variable name (e.g., API_KEY)",
          "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
        },
        "description": {
          "type": "string",
          "description": "Human-readable explanation of the variable's purpose",
          "minLength": 5,
          "maxLength": 200
        },
        "required": {
          "type": "boolean",
          "description": "Whether this environment variable is required for the server to function",
          "default": false
        },
        "secret": {
          "type": "boolean",
          "description": "Whether this environment variable contains sensitive information that should be stored as a secret",
          "default": false
        },
        "default": {
          "type": "string",
          "description": "Value to use if the environment variable is not explicitly provided (only used for non-required variables)"
        }
      },
      "additionalProperties": false
    },
    "permissions": {
      "type": "object",
      "description": "Security permissions applied to the MCP server",
      "required": [],
      "properties": {
        "network": {
          "$ref": "#/definitions/network_permissions"
        },
        "read": {
          "type": "array",
          "description": "File system paths the server needs read access to (will be mounted from the host)",
          "items": {
            "type": "string",
            "pattern": "^(/[^/\\0]+)+/?$"
          },
          "uniqueItems": true,
          "default": []
        },
        "write": {
          "type": "array",
          "description": "File system paths the server needs write access to (will be mounted from the host)",
          "items": {
            "type": "string",
            "pattern": "^(/[^/\\0]+)+/?$"
          },
          "uniqueItems": true,
          "default": []
        }
      },
      "additionalProperties": false
    },
    "network_permissions": {
      "type": "object",
      "description": "Network access permissions for the MCP server",
      "required": [],
      "properties": {
        "outbound": {
          "$ref": "#/definitions/outbound_permissions"
        }
      },
      "additionalProperties": false
    },
    "outbound_permissions": {
      "type": "object",
      "description": "Outbound network access permissions",
      "required": [],
      "properties": {
        "allow_host": {
          "type": "array",
          "description": "Allowed hostnames or domain patterns for outbound connections",
          "items": {
            "type": "string",
            "anyOf": [
              {
                "format": "hostname"
              },
              {
                "pattern": "^\\.[a-zA-Z0-9]([a-zA-Z0-9.-]*[a-zA-Z0-9])?$"
              }
            ]
          },
          "uniqueItems": true,
          "default": []
        },
        "allow_port": {
          "type": "array",
          "description": "Allowed port numbers for outbound connections",
          "items": {
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "uniqueItems": true,
          "default": []
        },
        "insecure_allow_all": {
          "type": "boolean",
          "description": "Whether to allow all outbound connections (insecure, use with caution)",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "description": "Metadata about the MCP server from external sources",
      "properties": {
        "last_updated": {
          "type": "string",
          "description": "Timestamp when the metadata was last updated, in RFC3339 format",
          "format": "date-time"
        },
        "pulls": {
          "type": "integer",
          "description": "Number of container image pulls",
          "minimum": 0
        },
        "stars": {
          "type": "integer",
          "description": "Number of repository stars",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "provenance": {
      "type": "object",
      "description": "Software supply chain provenance information for verified servers",
      "properties": {
        "cert_issuer": {
          "type": "string",
          "description": "Certificate issuer for provenance verification",
          "format": "uri",
          "examples": ["https://token.actions.githubusercontent.com"]
        },
        "repository_uri": {
          "type": "string",
          "description": "Repository URI used for provenance verification",
          "format": "uri"
        },
        "repository_ref": {
          "type": "string",
          "description": "Repository reference used for provenance verification"
        },
        "runner_environment": {
          "type": "string",
          "description": "Build environment where the server was built",
          "examples": ["github-hosted", "gitlab-hosted", "self-hosted"]
        },
        "signer_identity": {
          "type": "string",
          "description": "Identity of the signer for provenance verification"
        },
        "sigstore_url": {
          "type": "string",
          "description": "Sigstore TUF repository host for provenance verification",
          "format": "hostname",
          "default": "tuf-repo-cdn.sigstore.dev",
          "examples": ["tuf-repo.github.com", "tuf-repo-cdn.sigstore.dev"]
        },
        "attestation": {
          "description": "Verified attestation information",
          "$ref": "#/definitions/verified_attestation"
        }
      },
      "additionalProperties": false
    },
    "verified_attestation": {
      "type": "object",
      "description": "Verified attestation information",
      "properties": {
        "predicate_type": {
          "type": "string",
          "description": "Type of the attestation predicate",
          "format": "uri",
          "examples": [
            "https://slsa.dev/provenance/v0.2",
            "https://slsa.dev/provenance/v1"
          ]
        },
        "predicate": {
          "description": "Attestation predicate data"
        }
      },
      "additionalProperties": false
    }
  }
}
