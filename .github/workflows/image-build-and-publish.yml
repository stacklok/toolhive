name: Build and Sign Image

on:
  workflow_call:

jobs:
  image-build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    env:
      BASE_REPO: "ghcr.io/stacklok/toolhive"

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: go.mod

      - name: Compute version number
        id: version-string
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main branch, use semver with -dev suffix
            echo "tag=0.0.1-dev.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tags, use the tag as is (assuming it's semver)
            TAG="${{ github.ref_name }}"
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          else
            # For other branches, use branch name and run number
            BRANCH="${{ github.ref_name }}"
            echo "tag=0.0.1-$BRANCH.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup ko
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Build and Push Image to GHCR
        env:
          VERSION: ${{ steps.version-string.outputs.tag }}
          COMMIT: ${{ github.sha }}
          BUILD_DATE: ${{ github.event.head_commit.timestamp }}
          KO_CONFIG_PATH: ${{ github.workspace }}/.github/ko-ci.yml
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          TAGS="-t $TAG"
          
          # Add latest tag only if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAGS="$TAGS -t latest"
          fi
          
          KO_DOCKER_REPO=$BASE_REPO ko build --platform=linux/amd64,linux/arm64 --bare $TAGS ./cmd/thv \
            --image-label=org.opencontainers.image.source=https://github.com/stacklok/toolhive,org.opencontainers.image.title="toolhive",org.opencontainers.image.vendor=Stacklok

      - name: Sign Image with Cosign
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          # Sign the ko image
          cosign sign -y $BASE_REPO:$TAG
          
          # Sign the latest tag if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            cosign sign -y $BASE_REPO:latest
          fi

  egress-proxy-image-build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    env:
      BASE_REPO: "ghcr.io/stacklok/toolhive/egress-proxy"

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Compute version number
        id: version-string
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main branch, use semver with -dev suffix
            echo "tag=0.0.1-dev.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tags, use the tag as is (assuming it's semver)
            TAG="${{ github.ref_name }}"
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          else
            # For other branches, use branch name and run number
            BRANCH="${{ github.ref_name }}"
            echo "tag=0.0.1-$BRANCH.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.BASE_REPO }}
          tags: |
            type=raw,value=${{ steps.version-string.outputs.tag }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: containers/egress-proxy
          platforms: linux/amd64,linux/arm64
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=https://github.com/stacklok/toolhive
            org.opencontainers.image.title=toolhive-egress-proxy
            org.opencontainers.image.vendor=Stacklok

      - name: Install Cosign
        if: startsWith(github.ref, 'refs/tags/')
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Sign container image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          cosign sign -y $BASE_REPO:$TAG
          cosign sign -y $BASE_REPO:latest

  operator-image-build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    env:
      BASE_REPO: "ghcr.io/stacklok/toolhive/operator"

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: go.mod

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate CRDs
        run: task operator-manifests

      - name: Compute version number
        id: version-string
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main branch, use semver with -dev suffix
            echo "tag=0.0.1-dev.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tags, use the tag as is (assuming it's semver)
            TAG="${{ github.ref_name }}"
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          else
            # For other branches, use branch name and run number
            BRANCH="${{ github.ref_name }}"
            echo "tag=0.0.1-$BRANCH.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup ko
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Build and Push Image to GHCR
        env:
          VERSION: ${{ steps.version-string.outputs.tag }}
          COMMIT: ${{ github.sha }}
          BUILD_DATE: ${{ github.event.head_commit.timestamp }}
          KO_CONFIG_PATH: ${{ github.workspace }}/.github/ko-ci.yml
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          TAGS="-t $TAG"
          
          # Add latest tag only if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAGS="$TAGS -t latest"
          fi
          
          KO_DOCKER_REPO=$BASE_REPO ko build --platform=linux/amd64,linux/arm64 --bare $TAGS ./cmd/thv-operator \
            --image-label=org.opencontainers.image.source=https://github.com/stacklok/toolhive,org.opencontainers.image.title="toolhive-operator",org.opencontainers.image.vendor=Stacklok

      - name: Sign Image with Cosign
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          # Sign the ko image
          cosign sign -y $BASE_REPO:$TAG
          
          # Sign the latest tag if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            cosign sign -y $BASE_REPO:latest
          fi

  proxyrunner-image-build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    env:
      BASE_REPO: "ghcr.io/stacklok/toolhive/proxyrunner"

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: go.mod

      - name: Compute version number
        id: version-string
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main branch, use semver with -dev suffix
            echo "tag=0.0.1-dev.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tags, use the tag as is (assuming it's semver)
            TAG="${{ github.ref_name }}"
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          else
            # For other branches, use branch name and run number
            BRANCH="${{ github.ref_name }}"
            echo "tag=0.0.1-$BRANCH.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup ko
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Build and Push Image to GHCR
        env:
          VERSION: ${{ steps.version-string.outputs.tag }}
          COMMIT: ${{ github.sha }}
          BUILD_DATE: ${{ github.event.head_commit.timestamp }}
          KO_CONFIG_PATH: ${{ github.workspace }}/.github/ko-ci.yml
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          TAGS="-t $TAG"
          
          # Add latest tag only if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAGS="$TAGS -t latest"
          fi
          
          KO_DOCKER_REPO=$BASE_REPO ko build --platform=linux/amd64,linux/arm64 --bare $TAGS ./cmd/thv-proxyrunner \
            --image-label=org.opencontainers.image.source=https://github.com/stacklok/toolhive,org.opencontainers.image.title="toolhive-proxyrunner",org.opencontainers.image.vendor=Stacklok

      - name: Sign Image with Cosign
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          # Sign the ko image
          cosign sign -y $BASE_REPO:$TAG
          
          # Sign the latest tag if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            cosign sign -y $BASE_REPO:latest
          fi